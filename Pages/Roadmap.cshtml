@page
@model Eduhunt.Pages.RoadmapModel
@{
    ViewData["Title"] = "Roadmap";
}

<div class="container my-5" style="padding-bottom: 132px">
    <h2 class="mb-4 text-center">Roadmap</h2>

    @if (Model.IsMentor)
    {
        <!-- Mentor View: Add and View Own Roadmap -->
        <form method="post" enctype="multipart/form-data">
            <div id="roadmap-steps">
                @for (int i = 0; i < Model.Roadmaps.Count; i++)
                {
                    <div class="card mb-3 step-card" data-index="@i">
                        <div class="card-body">
                            <h5 class="card-title">Bước @(i + 1)</h5>
                            <div class="form-group mb-3">
                                <label asp-for="Roadmaps[i].Title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
                                <input asp-for="Roadmaps[i].Title" class="form-control" required />
                                <span asp-validation-for="Roadmaps[i].Title" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="Roadmaps[i].Description" class="form-label">Mô tả</label>
                                <textarea asp-for="Roadmaps[i].Description" class="form-control" rows="3"></textarea>
                                <span asp-validation-for="Roadmaps[i].Description" class="text-danger"></span>
                            </div>
                            @if (Model.CanAddStep && i == Model.Roadmaps.Count - 1)
                            {
                                <button type="button" class="btn btn-danger btn-sm remove-step">Xóa Bước</button>
                            }
                        </div>
                    </div>
                }
            </div>
            @if (Model.CanAddStep)
            {
                <div class="d-flex align-items-center justify-content-center gap-4">
                    <div class="text-center">
                        <button type="button" id="add-step" class="btn btn-primary">+ Thêm Bước</button>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-success">Lưu Roadmap</button>
                    </div>
                </div>
            }
        </form>
    }
    else
    {
        <!-- Regular User View: List of Mentors and Selected Mentor's Roadmap -->
        <div class="row">
            <div class="col-md-4">
                <h4>Danh sách Mentors</h4>
                @if (Model.Mentors.Any())
                {
                    <ul class="list-group">
                        @foreach (var mentor in Model.Mentors)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>@mentor.Email</span>
                                <button type="button" class="btn btn-sm btn-primary toggle-roadmap" data-mentor-id="@mentor.Id">
                                    Xem Roadmap
                                </button>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-center">Không có mentors nào để hiển thị.</p>
                }
            </div>
            <div class="col-md-8">
                @foreach (var mentor in Model.Mentors)
                {
                    <div id="roadmap-@mentor.Id" class="roadmap-container" style="display: none;">
                        <h4>Roadmap của @mentor.Email</h4>
                        @{
                            var mentorRoadmap = Model.Roadmaps.Where(r => r.ApplicationUserId == mentor.Id).ToList();
                        }
                        @if (mentorRoadmap.Any())
                        {
                            @foreach (var step in mentorRoadmap)
                            {
                                <div class="card mb-3 step-card">
                                    <div class="card-body">
                                        <h5 class="card-title">@step.Title</h5>
                                        <p class="card-text"><strong>Mô tả:</strong> @step.Description</p>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-center">Mentor này chưa có roadmap nào để hiển thị.</p>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (Model.IsMentor && Model.CanAddStep)
    {
        <script>
            let stepIndex = @Model.Roadmaps.Count;

            document.getElementById('add-step').addEventListener('click', function () {
                const roadmapSteps = document.getElementById('roadmap-steps');

                const stepDiv = document.createElement('div');
                stepDiv.classList.add('card', 'mb-3', 'step-card');
                stepDiv.setAttribute('data-index', stepIndex);

                stepDiv.innerHTML = `
                                <div class="card-body">
                                    <h5 class="card-title">Bước ${stepIndex + 1}</h5>
                                    <div class="form-group mb-3">
                                        <label for="Roadmaps_${stepIndex}__Title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
                                        <input type="text" name="Roadmaps[${stepIndex}].Title" class="form-control" id="Roadmaps_${stepIndex}__Title" required />
                                    </div>
                                    <div class="form-group mb-3">
                                        <label for="Roadmaps_${stepIndex}__Description" class="form-label">Mô tả</label>
                                        <textarea name="Roadmaps[${stepIndex}].Description" class="form-control" id="Roadmaps_${stepIndex}__Description" rows="3"></textarea>
                                    </div>
                                    <button type="button" class="btn btn-danger btn-sm remove-step">Xóa Bước</button>
                                </div>
                            `;
                roadmapSteps.appendChild(stepDiv);
                stepIndex++;
                updateStepNumbers();
            });

            document.getElementById('roadmap-steps').addEventListener('click', function (e) {
                if (e.target && e.target.matches('button.remove-step')) {
                    e.target.closest('.step-card').remove();
                    updateStepNumbers();
                }
            });

            function updateStepNumbers() {
                const stepCards = document.querySelectorAll('.step-card');
                stepCards.forEach((card, index) => {
                    card.setAttribute('data-index', index);
                    card.querySelector('.card-title').textContent = `Bước ${index + 1}`;

                    const titleInput = card.querySelector('input[name^="Roadmaps["]');
                    const descriptionInput = card.querySelector('textarea[name^="Roadmaps["]');

                    if (titleInput) {
                        titleInput.name = `Roadmaps[${index}].Title`;
                        titleInput.id = `Roadmaps_${index}__Title`;
                    }

                    if (descriptionInput) {
                        descriptionInput.name = `Roadmaps[${index}].Description`;
                        descriptionInput.id = `Roadmaps_${index}__Description`;
                    }
                });
                stepIndex = stepCards.length;
            }

            updateStepNumbers();
        </script>
    }
    else
    {
        <script>
            document.querySelectorAll('.toggle-roadmap').forEach(button => {
                button.addEventListener('click', function () {
                    const mentorId = this.getAttribute('data-mentor-id');
                    const roadmapContainer = document.getElementById(`roadmap-${mentorId}`);

                    if (roadmapContainer.style.display === 'none') {
                        // Hide all other roadmaps
                        document.querySelectorAll('.roadmap-container').forEach(container => {
                            container.style.display = 'none';
                        });
                        document.querySelectorAll('.toggle-roadmap').forEach(btn => {
                            btn.textContent = 'Xem Roadmap';
                        });

                        // Show the selected roadmap
                        roadmapContainer.style.display = 'block';
                        this.textContent = 'Ẩn Roadmap';
                    } else {
                        roadmapContainer.style.display = 'none';
                        this.textContent = 'Xem Roadmap';
                    }
                });
            });
        </script>
    }
}