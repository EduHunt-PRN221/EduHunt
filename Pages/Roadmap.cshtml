@page
@model Eduhunt.Pages.RoadmapModel
@{
    ViewData["Title"] = "Roadmap";
}

<!-- Ensure Bootstrap CSS and Bootstrap Icons are included -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="container my-5" style="padding-bottom: 132px">

    @if (Model.IsMentor)
    {
        <!-- Mentor View: Add and View Own Roadmap -->
        <div class="card shadow-sm">
            <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #0D6EFD; color: white;">
                <h5 class="mb-0">Manage Roadmap</h5>
                @if (Model.CanAddStep)
                {
                    <button type="button" id="add-step" class="btn btn-light btn-sm" aria-label="Add Step">
                        <i class="bi bi-plus-circle"></i> Add Step
                    </button>
                }
            </div>
            <div class="card-body">
                <form method="post" enctype="multipart/form-data">
                    <div id="roadmap-steps">
                        @for (int i = 0; i < Model.Roadmaps.Count; i++)
                        {
                            <div class="card mb-3 step-card" data-index="@i">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h5 class="card-title">Step @(i + 1)</h5>
                                        @if (Model.CanAddStep && i == Model.Roadmaps.Count - 1)
                                        {
                                            <button type="button" class="btn btn-danger btn-sm remove-step" aria-label="Delete Step">
                                                <i class="bi bi-trash"></i> Delete Step
                                            </button>
                                        }
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="Roadmaps[i].Title" class="form-label">Title <span class="text-danger">*</span></label>
                                        <input asp-for="Roadmaps[i].Title" class="form-control" required />
                                        <span asp-validation-for="Roadmaps[i].Title" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="Roadmaps[i].Description" class="form-label">Description</label>
                                        <textarea asp-for="Roadmaps[i].Description" class="form-control" rows="3"></textarea>
                                        <span asp-validation-for="Roadmaps[i].Description" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @if (Model.CanAddStep)
                    {
                        <div class="gap-4">
                            <button type="submit" class="btn btn-success" aria-label="Save Roadmap">
                                <i class="bi bi-save"></i> Save Roadmap
                            </button>
                        </div>
                    }
                </form>
            </div>
        </div>
    }
    else
    {
        <!-- Regular User View: List of Mentors and Selected Mentor's Roadmap -->
        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header" style="background-color: #0D6EFD; color: white;">
                        <h5 class="mb-0">List of Mentors</h5>
                    </div>
                    <div class="card-body p-2">
                        @if (Model.Mentors.Any())
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var mentor in Model.Mentors)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span>@mentor.Email</span>
                                        <button type="button" class="btn btn-sm btn-primary toggle-roadmap" data-mentor-id="@mentor.Id" aria-label="View Roadmap">
                                            <i class="bi bi-eye"></i> View Roadmap
                                        </button>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-center">No mentors to display.</p>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                @foreach (var mentor in Model.Mentors)
                {
                    <div id="roadmap-@mentor.Id" class="roadmap-container" style="display: none;">
                        <div class="card shadow-sm mb-4">
                            <div class="card-header" style="background-color: #0D6EFD; color: white;">
                                <h5 class="mb-0">Roadmap of @mentor.Email</h5>
                            </div>
                            <div class="card-body">
                                @{
                                    var mentorRoadmap = Model.Roadmaps.Where(r => r.ApplicationUserId == mentor.Id).ToList();
                                }
                                @if (mentorRoadmap.Any())
                                {
                                    @foreach (var step in mentorRoadmap)
                                    {
                                        <div class="card mb-3">
                                            <div class="card-body">
                                                <h5 class="card-title">@step.Title</h5>
                                                <p class="card-text"><strong>Description:</strong> @step.Description</p>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-center">This mentor has no roadmap to display.</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<!-- Include Bootstrap JS Bundle (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (Model.IsMentor && Model.CanAddStep)
    {
        <script>
            let stepIndex = @Model.Roadmaps.Count;

            document.getElementById('add-step').addEventListener('click', function () {
                const roadmapSteps = document.getElementById('roadmap-steps');

                const stepDiv = document.createElement('div');
                stepDiv.classList.add('card', 'mb-3', 'step-card');
                stepDiv.setAttribute('data-index', stepIndex);

                stepDiv.innerHTML = `
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h5 class="card-title">Step ${stepIndex + 1}</h5>
                                                    <button type="button" class="btn btn-danger btn-sm remove-step" aria-label="Delete Step">
                                                        <i class="bi bi-trash"></i> Delete Step
                                                    </button>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="Roadmaps_${stepIndex}__Title" class="form-label">Title <span class="text-danger">*</span></label>
                                                    <input type="text" name="Roadmaps[${stepIndex}].Title" class="form-control" id="Roadmaps_${stepIndex}__Title" required />
                                                </div>
                                                <div class="mb-3">
                                                    <label for="Roadmaps_${stepIndex}__Description" class="form-label">Description</label>
                                                    <textarea name="Roadmaps[${stepIndex}].Description" class="form-control" id="Roadmaps_${stepIndex}__Description" rows="3"></textarea>
                                                </div>
                                            </div>
                                        `;
                roadmapSteps.appendChild(stepDiv);
                stepIndex++;
                updateStepNumbers();
            });

            // Event delegation for removing steps
            document.getElementById('roadmap-steps').addEventListener('click', function (e) {
                if (e.target.closest('button.remove-step')) {
                    e.target.closest('.step-card').remove();
                    updateStepNumbers();
                }
            });

            // Function to update step numbers and input names/ids
            function updateStepNumbers() {
                const stepCards = document.querySelectorAll('.step-card');
                stepCards.forEach((card, index) => {
                    card.setAttribute('data-index', index);
                    card.querySelector('.card-title').textContent = `Step ${index + 1}`;

                    const titleInput = card.querySelector('input[name^="Roadmaps["]');
                    const descriptionInput = card.querySelector('textarea[name^="Roadmaps["]');

                    if (titleInput) {
                        titleInput.name = `Roadmaps[${index}].Title`;
                        titleInput.id = `Roadmaps_${index}__Title`;
                    }

                    if (descriptionInput) {
                        descriptionInput.name = `Roadmaps[${index}].Description`;
                        descriptionInput.id = `Roadmaps_${index}__Description`;
                    }
                });
                stepIndex = stepCards.length;
            }

            // Initialize step numbers on page load
            updateStepNumbers();
        </script>
    }
    else
    {
        <script>
            document.querySelectorAll('.toggle-roadmap').forEach(button => {
                button.addEventListener('click', function () {
                    const mentorId = this.getAttribute('data-mentor-id');
                    const roadmapContainer = document.getElementById(`roadmap-${mentorId}`);

                    if (roadmapContainer.style.display === 'none' || roadmapContainer.style.display === '') {
                        // Hide all other roadmaps
                        document.querySelectorAll('.roadmap-container').forEach(container => {
                            container.style.display = 'none';
                        });
                        // Reset all buttons' text
                        document.querySelectorAll('.toggle-roadmap').forEach(btn => {
                            btn.innerHTML = '<i class="bi bi-eye"></i> View Roadmap';
                        });

                        // Show the selected roadmap
                        roadmapContainer.style.display = 'block';
                        this.innerHTML = '<i class="bi bi-eye-slash"></i> Hide Roadmap';
                    } else {
                        roadmapContainer.style.display = 'none';
                        this.innerHTML = '<i class="bi bi-eye"></i> View Roadmap';
                    }
                });
            });
        </script>
    }
}
